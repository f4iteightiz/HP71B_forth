76 STRING LINEBUF 128 STRING SIDEBUF 52 STRING SL1
" +--------------------------------------------------+" SL1 S!
: STRV CREATE DUP 1 - 5 * 1 + DUP C, C, 43 C, 2 - 0 DO 27 C, 66
C, 27 C, 68 C, 124 C, LOOP 27 C, 66 C, 27 C, 68 C, 43 C, DOES>
1 CHARS + DUP 1 CHARS + SWAP C@ ;
15 STRING SNAKEBUF 21 STRING LENGTHBUF 5 STRING APPLEBUF
: MYRAND OVER - TIME 1000.0 F/ FP 100000.0 F* FTOI SWAP PMOD + ;
: SNAKE-SIZE 200 ; : XDIM 51 ; : YDIM 21 ;
YDIM 1 + STRV SV1
CREATE SNAKE SNAKE-SIZE CELLS 2 * NALLOT
CREATE APPLE 2 CELLS NALLOT
CREATE APPLE_OLD 2 CELLS NALLOT
VARIABLE HEAD VARIABLE LENGTH VARIABLE DIRECTION
: SEGMENT HEAD @ + SNAKE-SIZE PMOD CELLS 2 * SNAKE + ;
: POS+ ROT + -ROT + SWAP ;
: POINT= 2@ ROT 2@ ROT = -ROT = AND ;
: HEAD* 0 SEGMENT ;
: TAIL*  LENGTH @ SEGMENT ;
: MOVE-HEAD! HEAD @ 1 - SNAKE-SIZE PMOD HEAD ! ;
: GROW! 1 LENGTH +! ;
: EAT-APPLE! APPLE 2@ APPLE_OLD 2! 1 XDIM MYRAND 1 YDIM MYRAND
APPLE 2! GROW! ;
: STEP! HEAD* 2@ MOVE-HEAD! POS+ HEAD* 2! ;
: LEFT -1 0 ; : RIGHT 1 0 ; : DOWN 0 1 ; : UP 0 -1 ;
: WALL? HEAD* 2@ 1 YDIM WITHIN SWAP 1 XDIM WITHIN AND NOT ;
: CROSSING? FALSE LENGTH @ 1 2DUP = IF 2DROP ELSE DO I SEGMENT
HEAD* POINT= OR LOOP THEN ;
: APPLE? HEAD* APPLE POINT= ;
: DEAD? WALL? CROSSING? OR ;
: DRAW-FRAME LINEBUF CLEARSTR 0 0 AT-XY<BF SL1 S<& OUTPUT 
LINEBUF CLEARSTR 0 YDIM AT-XY<BF SL1 S<& OUTPUT SIDEBUF CLEARSTR
0 0 AT-XY<BF SV1 S<& OUTPUT SIDEBUF CLEARSTR XDIM 0 AT-XY<BF SV1
S<& OUTPUT ;
: DRAW-SNAKE SNAKEBUF CLEARSTR LENGTH @ 0 2DUP = IF 2DROP ELSE
DO I SEGMENT 2@ AT-XY<BF 35 CHR$ S<& LOOP THEN OUTPUT ;
: UPDATE-SNAKE SNAKEBUF CLEARSTR HEAD* 2@ AT-XY<BF " #" S<&
OUTPUT TAIL* APPLE POINT= NOT IF SNAKEBUF CLEARSTR TAIL* 2@
AT-XY<BF 32 CHR$ S<& OUTPUT ELSE THEN ;
: DRAW-APPLE APPLEBUF CLEARSTR APPLE 2@ AT-XY<BF " Q" S<& OUTPUT
;
: UPDATE-APPLE APPLEBUF CLEARSTR APPLE_OLD 2@ AT-XY<BF " #" S<&
OUTPUT DRAW-APPLE ;
: DRAW-LENGTH LENGTHBUF CLEARSTR 0 22 AT-XY<BF " SNAKE LENGTH: "
S<& LENGTH @ N>$ S<& OUTPUT ;
: UPDATE-LENGTH LENGTHBUF CLEARSTR 14 22 AT-XY<BF LENGTH @ N>$
S<& OUTPUT ;
: NEWGAME! RES2CHR OUTPUT 0 HEAD ! XDIM 2 / YDIM 2 / SNAKE 2! 3
3 APPLE 2! 3 LENGTH ! ['] UP DIRECTION ! LEFT STEP! LEFT STEP!
LEFT STEP! LEFT STEP! DRAW-FRAME DRAW-SNAKE DRAW-APPLE
DRAW-LENGTH ;
: GAMELOOP BEGIN DUP MS ?TERMINAL IF KEY DUP 97 = IF ['] LEFT
ELSE DUP 65 = IF ['] LEFT ELSE DUP 119 = IF ['] UP ELSE DUP 87 =
IF ['] UP ELSE DUP 100 = IF ['] RIGHT ELSE DUP 68 = IF ['] RIGHT
ELSE DUP 115 = IF ['] DOWN ELSE DUP 83 = IF ['] DOWN ELSE 
DIRECTION @ THEN THEN THEN THEN THEN THEN THEN THEN DIRECTION !
DROP THEN DIRECTION PERFORM STEP! APPLE? IF EAT-APPLE!
UPDATE-APPLE UPDATE-LENGTH ELSE UPDATE-SNAKE THEN DEAD? UNTIL
DROP ." *** GAME OVER ***" CR ;
: SSNAKE DELAY00  0 PRIMARY ! RES2CHR OUTPUT CR CR 
." Snake in Forth" CR CR 3000 MS NEWGAME! 1 GAMELOOP ;
